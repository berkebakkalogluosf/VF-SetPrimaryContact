@isTest
private class ExtOneTest {
    
    private static Account initAccount() {
        Account account = new Account(Name='Test Account');
        insert account;
        
        return account;
    }
    
    private static List<Contact> initContacts(Account account) {
        List<Contact> contacts = new List<Contact>();
        for (Integer i = 0; i < 1000; i++) {
            Contact contact = new Contact();
            contact.LastName = 'test' + i;
            contact.AccountId = account.Id;
            
            contacts.add(contact);
        }
        insert contacts;
        
        return contacts;
    }
    
    private static ExtOne initExtension(Account account) {
        ApexPages.currentPage().getParameters().put('id', account.Id);
        ApexPages.StandardController stdController = new ApexPages.StandardController(Account);
        ExtOne extOne = new ExtOne(stdController);
        
        return extOne;
    }
    
    @isTest
    private static void testSearch() {
        Account account = initAccount();
        List<Contact> contacts = initContacts(account);
        ExtOne extOne = initExtension(account);
        
        Test.startTest();
        extOne.search();
        Test.stopTest();
        
        System.assertEquals(true, extOne.inSearch);
    }
    
    @isTest
    private static void testReset() {
        Account account = initAccount();
        List<Contact> contacts = initContacts(account);
        ExtOne extOne = initExtension(account);
        
        Test.startTest();
        extOne.reset();
        Test.stopTest();
        
        System.assertEquals(false, extOne.inSearch);
    }
    
    @isTest
    private static void testGetContactsInSearch() {
        Account account = initAccount();
        List<Contact> contacts = initContacts(account);
        ExtOne extOne = initExtension(account);
        
        Test.startTest();
        extOne.searchKey = 'test0';
        extOne.inSearch = true;
        Contact searchedContact = extOne.getContacts()[0];
        Test.stopTest();
        
        System.assertEquals(contacts[0].Id, searchedContact.Id);
    }
    
    @isTest
    private static void testGetContactsNotInSearch() {
        Account account = initAccount();
        List<Contact> contacts = initContacts(account);
        ExtOne extOne = initExtension(account);
        
        Test.startTest();
        extOne.inSearch = false;
        List<Contact> allContacts = extOne.getContacts();
        
        List<Id> expectedIds = new List<Id>();
        for (Contact cont : contacts) {
            expectedIds.add(cont.Id);
        }
        
        List<Id> actualIds = new List<Id>();
        for (Contact cont: allContacts) {
            actualIds.add(cont.Id);
        }
        Test.stopTest();
        
        System.assertEquals(expectedIds, actualIds);
    }
    
    @isTest
    private static void testSetAsPrimary() {
        Account account = initAccount();
        List<Contact> contacts = initContacts(account);
        ExtOne extOne = initExtension(account);
        
        Test.startTest();
        extOne.contactId = contacts[0].Id;
        extOne.setAsPrimary();
        List<Contact> primaryContacts = [SELECT Id, Is_Primary_Contact__c FROM Contact WHERE Is_Primary_Contact__c = true AND AccountId =: account.Id];
        Test.stopTest();
        
        System.assertEquals(1, primaryContacts.size());
    }
}